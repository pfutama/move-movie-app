[{"D:\\Projects\\Glints\\fe-team-e-tama\\src\\index.js":"1","D:\\Projects\\Glints\\fe-team-e-tama\\src\\App.js":"2","D:\\Projects\\Glints\\fe-team-e-tama\\src\\redux\\index.js":"3","D:\\Projects\\Glints\\fe-team-e-tama\\src\\Routes.js":"4","D:\\Projects\\Glints\\fe-team-e-tama\\src\\components\\Footer.js":"5","D:\\Projects\\Glints\\fe-team-e-tama\\src\\components\\Navbar.js":"6","D:\\Projects\\Glints\\fe-team-e-tama\\src\\pages\\HomePage.js":"7","D:\\Projects\\Glints\\fe-team-e-tama\\src\\pages\\NotFound\\index.js":"8","D:\\Projects\\Glints\\fe-team-e-tama\\src\\redux\\actions\\usersAction.js":"9","D:\\Projects\\Glints\\fe-team-e-tama\\src\\components\\Carousel.js":"10","D:\\Projects\\Glints\\fe-team-e-tama\\src\\pages\\Detail\\index.js":"11","D:\\Projects\\Glints\\fe-team-e-tama\\src\\components\\karosel.js":"12","D:\\Projects\\Glints\\fe-team-e-tama\\src\\redux\\actions\\movie.js":"13","D:\\Projects\\Glints\\fe-team-e-tama\\src\\pages\\Detail\\Tab\\Review.js":"14","D:\\Projects\\Glints\\fe-team-e-tama\\src\\API\\index.js":"15","D:\\Projects\\Glints\\fe-team-e-tama\\src\\pages\\Detail\\Tab\\Overview.js":"16","D:\\Projects\\Glints\\fe-team-e-tama\\src\\pages\\Detail\\Tab\\Characters.js":"17","D:\\Projects\\Glints\\fe-team-e-tama\\src\\redux\\reducers\\index.js":"18","D:\\Projects\\Glints\\fe-team-e-tama\\src\\redux\\reducers\\usersReducer.js":"19","D:\\Projects\\Glints\\fe-team-e-tama\\src\\redux\\reducers\\movieReducer.js":"20"},{"size":469,"mtime":1612475231105,"results":"21","hashOfConfig":"22"},{"size":718,"mtime":1614047363594,"results":"23","hashOfConfig":"22"},{"size":305,"mtime":1612475395664,"results":"24","hashOfConfig":"22"},{"size":249,"mtime":1612413852528,"results":"25","hashOfConfig":"22"},{"size":1685,"mtime":1612689202005,"results":"26","hashOfConfig":"22"},{"size":4818,"mtime":1615014666868,"results":"27","hashOfConfig":"22"},{"size":4716,"mtime":1612751825454,"results":"28","hashOfConfig":"22"},{"size":392,"mtime":1612483294383,"results":"29","hashOfConfig":"22"},{"size":900,"mtime":1612544572517,"results":"30","hashOfConfig":"22"},{"size":1142,"mtime":1612277976169,"results":"31","hashOfConfig":"22"},{"size":3244,"mtime":1612751825454,"results":"32","hashOfConfig":"22"},{"size":323,"mtime":1612685065509,"results":"33","hashOfConfig":"22"},{"size":2808,"mtime":1612751825455,"results":"34","hashOfConfig":"22"},{"size":3109,"mtime":1612689854102,"results":"35","hashOfConfig":"22"},{"size":174,"mtime":1612689183341,"results":"36","hashOfConfig":"22"},{"size":853,"mtime":1612687429784,"results":"37","hashOfConfig":"22"},{"size":1022,"mtime":1612689918275,"results":"38","hashOfConfig":"22"},{"size":213,"mtime":1612478417247,"results":"39","hashOfConfig":"22"},{"size":492,"mtime":1613891972199,"results":"40","hashOfConfig":"22"},{"size":1125,"mtime":1612751825455,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1aixs8w",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Projects\\Glints\\fe-team-e-tama\\src\\index.js",[],["89","90"],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\App.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\redux\\index.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\Routes.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\components\\Footer.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\components\\Navbar.js",["91","92"],"import React, { useState, Fragment } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { postSignUp, postSignIn } from '../redux/actions/usersAction'\r\nimport '../Styles/Navbar.css'\r\nimport _ from 'lodash'\r\nimport jwt_decode from 'jwt-decode'\r\nimport Modal from 'react-modal'\r\nimport movE from '../Assets/movE.png'\r\n\r\nexport const MODAL_LOGIN = 1\r\nexport const MODAL_SIGNUP = 2\r\n\r\nfunction Navbarr() {\r\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\r\n\tconst [whichModal, setWhichModal] = useState(null)\r\n\tconst [userData, setUserData] = useState({\r\n\t\tusername: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t})\r\n\r\n\tconst [userSignIn, setUserSignIn] = useState({\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t\ttoken: '',\r\n\t})\r\n\r\n\tconst { signup, signIn, jwtToken } = useSelector((state) => state.users)\r\n\tconsole.log('response signup', signup)\r\n\tconsole.log(userData)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst token = localStorage.getItem('token')\r\n\tlet decoded\r\n\tif (token && !_.isEmpty(token)) decoded = jwt_decode(token)\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className='navbar-container'>\r\n\t\t\t\t<a href='/'>\r\n\t\t\t\t\t<img className='logoE' src={movE} alt='movE' />\r\n\t\t\t\t</a>\r\n\t\t\t\t<div className='signin-button'>\r\n\t\t\t\t\t{decoded ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className='username'>{decoded.username}</div>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName='signout-button'\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tlocalStorage.removeItem('token')\r\n\t\t\t\t\t\t\t\t\twindow.open('/', '_self')\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tSIGN OUT\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='signin-button'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetIsModalOpen(true)\r\n\t\t\t\t\t\t\t\tsetWhichModal(MODAL_SIGNUP)\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Modal isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)} className='modal-container' overlayClassName='modal-overlay-center' contentLabel='Sign in'>\r\n\t\t\t\t\t\t{renderWhichModal()}\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n\r\n\tfunction renderWhichModal() {\r\n\t\tconst handleLogin = (event) => {\r\n\t\t\tevent.preventDefault()\r\n\t\t\tsetWhichModal(false)\r\n\t\t}\r\n\r\n\t\tconst handleChange = (event) => {\r\n\t\t\tsetUserData({\r\n\t\t\t\t...userData,\r\n\t\t\t\t[event.target.name]: event.target.value,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst handleSignIn = (event) => {\r\n\t\t\tsetUserSignIn({\r\n\t\t\t\t...userSignIn,\r\n\t\t\t\t[event.target.name]: event.target.value,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst submitSignUp = (event) => {\r\n\t\t\tevent.preventDefault()\r\n\t\t\tconst body = {\r\n\t\t\t\tusername: userData.name,\r\n\t\t\t\temail: userData.email,\r\n\t\t\t\tpassword: userData.password,\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(postSignUp(body))\r\n\t\t}\r\n\r\n\t\tconst submitSignIn = (event) => {\r\n\t\t\tevent.preventDefault()\r\n\t\t\tconst body = {\r\n\t\t\t\temail: userSignIn.email,\r\n\t\t\t\tpassword: userSignIn.password,\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(postSignIn(body))\r\n\t\t}\r\n\r\n\t\tswitch (whichModal) {\r\n\t\t\tcase MODAL_LOGIN:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='home-signup'>\r\n\t\t\t\t\t\t<img className='movE' src={movE} alt='movE' />\r\n\t\t\t\t\t\t<form className='home-signup-form' onSubmit={handleLogin}>\r\n\t\t\t\t\t\t\t<div>email</div>\r\n\t\t\t\t\t\t\t<input className='form-input' type='email' name='email' onChange={(event) => handleSignIn(event)} />\r\n\r\n\t\t\t\t\t\t\t<div>Password</div>\r\n\t\t\t\t\t\t\t<input className='form-input' type='password' name='password' onChange={(event) => handleSignIn(event)} />\r\n\r\n\t\t\t\t\t\t\t<button className='home-signup-form-submit' type='submit' onClick={submitSignIn}>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t\t<h2 className='home-signup-redirect'>\r\n\t\t\t\t\t\t\tHaven't create an account yet?\r\n\t\t\t\t\t\t\t<span className='clickToLogin' onClick={() => setWhichModal(MODAL_SIGNUP)}>\r\n\t\t\t\t\t\t\t\t&nbsp;Register Here\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\tcase MODAL_SIGNUP:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className='home-signup'>\r\n\t\t\t\t\t\t\t<img className='movE' src={movE} alt='movE' />\r\n\t\t\t\t\t\t\t<form className='home-signup-form' onSubmit={handleLogin}>\r\n\t\t\t\t\t\t\t\t<div>Full Name</div>\r\n\t\t\t\t\t\t\t\t<input className='form-input' type='text' name='name' onChange={(event) => handleChange(event)} />\r\n\r\n\t\t\t\t\t\t\t\t<div>Email</div>\r\n\t\t\t\t\t\t\t\t<input className='form-input' type='email' name='email' onChange={(event) => handleChange(event)} />\r\n\r\n\t\t\t\t\t\t\t\t<div>Password</div>\r\n\t\t\t\t\t\t\t\t<input className='form-input' type='password' name='password' onChange={(event) => handleChange(event)} />\r\n\r\n\t\t\t\t\t\t\t\t<button className='home-signup-form-submit' type='submit' onClick={submitSignUp}>\r\n\t\t\t\t\t\t\t\t\tSign up\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t<h2 className='home-signup-redirect'>\r\n\t\t\t\t\t\t\t\tAlready have an account?\r\n\t\t\t\t\t\t\t\t<span className='clickToLogin' onClick={() => setWhichModal(MODAL_LOGIN)}>\r\n\t\t\t\t\t\t\t\t\t&nbsp;Login here\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Navbarr\r\n","D:\\Projects\\Glints\\fe-team-e-tama\\src\\pages\\HomePage.js",["93","94"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getMovies, getGenres, getMoviesByGenreId, searchMovie, getTrailer } from '../redux/actions/movie'\r\nimport { sliderData } from '../components/karosel'\r\nimport { Container, Button } from 'reactstrap'\r\nimport '../Styles/Homepage.css'\r\nimport Carrosell from '../components/Carousel'\r\n\r\nconst imgSrc = 'https://image.tmdb.org/t/p/w500'\r\n\r\nfunction HomePage(props) {\r\n\tconst [page, setPage] = useState(1)\r\n\tconst [genreId, setGenreId] = useState(0)\r\n\tconst [search, setSearch] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.getMovies()\r\n\t\tprops.getGenres()\r\n\t}, [props.getMovies])\r\n\r\n\tconst handleChangePage = (pg) => {\r\n\t\tsetPage(pg)\r\n\r\n\t\tprops.getMovies(pg)\r\n\t}\r\n\tconst handleGetMovieByGenre = (id) => {\r\n\t\tsetGenreId(id)\r\n\t\tprops.getMoviesByGenreId(id)\r\n\t}\r\n\r\n\tconst handleSearchChange = (e) => {\r\n\t\tsetSearch(e.target.value)\r\n\t\tprops.searchMovie({ query: e.target.value })\r\n\t}\r\n\r\n\tconst { foundMovie } = props\r\n\r\n\treturn (\r\n\t\t<div className='content-container'>\r\n\t\t\t<Carrosell slides={sliderData} />\r\n\t\t\t<div className='my-3'>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor={genreId === 0 ? 'primary' : 'light'}\r\n\t\t\t\t\tclassName='mr-2 mt-2'\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetGenreId(0)\r\n\t\t\t\t\t\tprops.getMovies()\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tAll\r\n\t\t\t\t</Button>\r\n\t\t\t\t{props.genres && props.genres.length !== 0\r\n\t\t\t\t\t? props.genres.map((genre, index) => (\r\n\t\t\t\t\t\t\t<Button color={genreId === genre.id ? 'primary' : 'light'} className='mr-2 mt-2' key={index} onClick={() => handleGetMovieByGenre(genre.id)}>\r\n\t\t\t\t\t\t\t\t{genre.name}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t: ''}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='searchMovies'>\r\n\t\t\t\t<input className='searchMovies-box' type='text' placeholder='search......' onChange={handleSearchChange}></input>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Container fluid className='mt-5'>\r\n\t\t\t\t{foundMovie.length === 0 ? (\r\n\t\t\t\t\t<div className='movies-list'>\r\n\t\t\t\t\t\t{props.movies && props.movies.length !== 0\r\n\t\t\t\t\t\t\t? props.movies.map((movie, index) => (\r\n\t\t\t\t\t\t\t\t\t<div onClick={() => props.history.push(`/detail/${movie.id}`)} className='movie-item' key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<img src={`${imgSrc}${movie.poster_path}`} alt={movie.name} />\r\n\t\t\t\t\t\t\t\t\t\t<h4>{movie.title}</h4>\r\n\t\t\t\t\t\t\t\t\t\t<p>{movie.release_date}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t\t: ''}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className='movies-list'>\r\n\t\t\t\t\t\t{foundMovie.map((movie, index) => (\r\n\t\t\t\t\t\t\t<div onClick={() => props.history.push(`/detail/${movie.id}`)} className='movie-item' key={index}>\r\n\t\t\t\t\t\t\t\t<img src={`${imgSrc}${movie.poster_path}`} alt={movie.name} />\r\n\t\t\t\t\t\t\t\t<h4>{movie.title}</h4>\r\n\t\t\t\t\t\t\t\t<p>{movie.release_date}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className='home-pagination my-4 d-flex justify-content-center'>\r\n\t\t\t\t\t{page !== 1 && (\r\n\t\t\t\t\t\t<Button onClick={() => handleChangePage(page - 1)} color='link' className='rounded-circle mr-2'>\r\n\t\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tfoundMovie.length === 0 ? handleChangePage(1) : searchMovie({ query: search, page: 1 })\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcolor={page === 1 ? 'primary' : 'light'}\r\n\t\t\t\t\t\tclassName='rounded-circle mr-2'>\r\n\t\t\t\t\t\t1\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tfoundMovie.length === 0 ? handleChangePage(2) : searchMovie({ query: search, page: 2 })\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcolor={page === 2 ? 'primary' : 'light'}\r\n\t\t\t\t\t\tclassName='rounded-circle mr-2'>\r\n\t\t\t\t\t\t2\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tfoundMovie.length === 0 ? handleChangePage(3) : searchMovie({ query: search, page: 3 })\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcolor={page === 3 ? 'primary' : 'light'}\r\n\t\t\t\t\t\tclassName='rounded-circle mr-2'>\r\n\t\t\t\t\t\t3\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tfoundMovie.length === 0 ? handleChangePage(4) : searchMovie({ query: search, page: 4 })\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcolor={page === 4 ? 'primary' : 'light'}\r\n\t\t\t\t\t\tclassName='rounded-circle mr-2'>\r\n\t\t\t\t\t\t4\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tfoundMovie.length === 0 ? handleChangePage(5) : searchMovie({ query: search, page: 5 })\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcolor={page === 5 ? 'primary' : 'light'}\r\n\t\t\t\t\t\tclassName='rounded-circle mr-2'>\r\n\t\t\t\t\t\t5\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={() => handleChangePage(page + 1)} color='link' className='rounded-circle mr-2'>\r\n\t\t\t\t\t\tNext\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tmovies: state.movie.movies,\r\n\t\tgenres: state.movie.genres,\r\n\t\tinput: state.movie.title,\r\n\t\tfoundMovie: state.movie.foundMovie,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, { getMovies, getGenres, getMoviesByGenreId, searchMovie })(HomePage)\r\n","D:\\Projects\\Glints\\fe-team-e-tama\\src\\pages\\NotFound\\index.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\redux\\actions\\usersAction.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\components\\Carousel.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\pages\\Detail\\index.js",["95","96"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Container, Jumbotron, Button, Spinner } from 'reactstrap'\r\nimport { Link, Route, Switch, useParams } from 'react-router-dom'\r\nimport { getMovieDetails, getTrailer } from '../../redux/actions/movie'\r\nimport { IMG_SRC } from '../../API/index'\r\nimport Characters from './Tab/Characters'\r\nimport Review from './Tab/Review'\r\nimport Overview from './Tab/Overview'\r\nimport ReactStars from 'react-rating-stars-component'\r\nimport '../../Styles/Tab.css'\r\nfunction Detail(props) {\r\n\tconst { id } = useParams()\r\n\tuseEffect(() => {\r\n\t\tprops.getMovieDetails(id)\r\n\t\tprops.getTrailer(id)\r\n\t}, [props.getMovieDetails, props.getTrailer])\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Container className='jumbotron'>\r\n\t\t\t\t{!props.movieDetail ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Jumbotron\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackgroundImage: `url('${IMG_SRC}${props.movieDetail.backdrop_path}')`,\r\n\t\t\t\t\t\t\t\tbackgroundRepeat: 'no-repeat',\r\n\t\t\t\t\t\t\t\tbackgroundSize: 'cover',\r\n\t\t\t\t\t\t\t\tcolor: 'white',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tclassName='my-4'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1> {props.movieDetail.title} </h1>\r\n\t\t\t\t\t\t\t\t<div className='ratings d-flex'>\r\n\t\t\t\t\t\t\t\t\t<div className='mr-3'>\r\n\t\t\t\t\t\t\t\t\t\t<ReactStars size={18} value={props.movieDetail.vote_average / 2} edit={false} isHalf={true} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{props.movieDetail.vote_count}\r\n\t\t\t\t\t\t\t\t\t\tvote\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<p className='short-synopsis my-3'>{props.movieDetail.tagline}</p>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{/* <Link to={{ pathname: `https://www.youtube.com/watch?v=${props.trailer.key}` }} target='_blank'> */}\r\n\t\t\t\t\t\t\t\t\t<Button className='mr-3' color='primary'>\r\n\t\t\t\t\t\t\t\t\t\tWatch trailer\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t{/* </Link> */}\r\n\t\t\t\t\t\t\t\t\t<Button color='primary' outline>\r\n\t\t\t\t\t\t\t\t\t\tAdd to Watchlist\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t\t<div className='nav-container'>\r\n\t\t\t\t\t\t\t<ul className='nav nav-pills'>\r\n\t\t\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t\t\t<a className='nav-link' href={`/detail/${props.movieDetail.id}`} exact>\r\n\t\t\t\t\t\t\t\t\t\tOverview\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t\t\t<a className='nav-link' href={`/detail/${props.movieDetail.id}/review`}>\r\n\t\t\t\t\t\t\t\t\t\tReview\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t\t\t<a className='nav-link ' href={`/detail/${props.movieDetail.id}/characters`}>\r\n\t\t\t\t\t\t\t\t\t\tCharacters\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route path='/detail/:id/review' exact component={Review} />\r\n\t\t\t\t\t\t\t<Route path='/detail/:id/characters' exact component={Characters} />\r\n\t\t\t\t\t\t\t<Route path='/detail/:id' exact component={() => <Overview movieDetail={props.movieDetail} />} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t)\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tmovieDetail: state.movie.movieDetail,\r\n\t\ttrailer: state.movie.trailer,\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetMovieDetails: (id) => dispatch(getMovieDetails(id)),\r\n\t\tgetTrailer: (id) => dispatch(getTrailer(id)),\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail)\r\n","D:\\Projects\\Glints\\fe-team-e-tama\\src\\components\\karosel.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\redux\\actions\\movie.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\pages\\Detail\\Tab\\Review.js",["97"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getReviewsByMovieId, postReview } from '../../../redux/actions/movie'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Row, Col, FormGroup, Input } from 'reactstrap'\r\nimport ReactStars from 'react-rating-stars-component'\r\nconst imgSrc = 'https://image.tmdb.org/t/p/w500'\r\n// import '../../../Styles/Review.css'\r\n\r\nfunction Review(props) {\r\n\tconst { id } = useParams()\r\n\tconst [review, setReview] = useState({\r\n\t\tauthor: 'Chonky',\r\n\t\tauthor_details: {\r\n\t\t\tavatar_path: '/https://static.boredpanda.com/blog/wp-content/uploads/2019/10/cinderblock-fat-cat-workout-fb.png',\r\n\t\t},\r\n\t\tcontent: '',\r\n\t})\r\n\tuseEffect(() => {\r\n\t\tprops.getReviewsByMovieId(id)\r\n\t}, [props.getReviewsByMovieId, id])\r\n\tuseEffect(() => {\r\n\t\tconsole.log(props.reviews)\r\n\t}, [props])\r\n\r\n\tconst renderImg = (img) => {\r\n\t\tlet rendered = 'https://www.pngitem.com/pimgs/m/150-1503945_transparent-user-png-default-user-image-png-png.png'\r\n\r\n\t\tif (img) {\r\n\t\t\tif (img.substring(1, 5) === 'http') {\r\n\t\t\t\trendered = img.substring(1)\r\n\t\t\t} else {\r\n\t\t\t\trendered = `${imgSrc}${img}`\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rendered\r\n\t}\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tprops.postReview(review)\r\n\t}\r\n\treturn (\r\n\t\t<div className='movie-reviews'>\r\n\t\t\t<hr></hr>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={2}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '100px',\r\n\t\t\t\t\t\t\theight: '100px',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsrc={renderImg(review.author_details.avatar_path)}\r\n\t\t\t\t\t\talt='cat'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<div class='author'>\r\n\t\t\t\t\t\t<h4 className='mb-0'> {review.author} </h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class='author-rating mb-1'>\r\n\t\t\t\t\t\t<ReactStars size={20} edit={true} isHalf={true} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class='author-review'>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<Input type='textarea' onChange={(e) => setReview({ ...review, content: e.target.value })} value={review.content} />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<Button onClick={handleSubmit} color='primary'>\r\n\t\t\t\t\t\t\tSubmit Review\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{props.reviews &&\r\n\t\t\t\tprops.reviews.map((review, index) => (\r\n\t\t\t\t\t<Row className='mt-4' key={index}>\r\n\t\t\t\t\t\t<Col md={2}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: '100px',\r\n\t\t\t\t\t\t\t\t\theight: '100px',\r\n\t\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tsrc={renderImg(review.author_details.avatar_path)}\r\n\t\t\t\t\t\t\t\talt='cat'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<div class='author'>\r\n\t\t\t\t\t\t\t\t<h4> {review.author} </h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class='author-review'>\r\n\t\t\t\t\t\t\t\t<p> {review.content.slice(0, 500)}... </p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\treviews: state.movie.reviews,\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tpostReview: (data) => dispatch(postReview(data)),\r\n\t\tgetReviewsByMovieId: (movieId) => dispatch(getReviewsByMovieId(movieId)),\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Review)\r\n","D:\\Projects\\Glints\\fe-team-e-tama\\src\\API\\index.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\pages\\Detail\\Tab\\Overview.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\pages\\Detail\\Tab\\Characters.js",["98"],"import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport '../../../Styles/Characters.css'\r\nimport { getCast } from '../../../redux/actions/movie'\r\nimport { connect } from 'react-redux'\r\nconst imgSrc = 'https://image.tmdb.org/t/p/w500'\r\n\r\nfunction Characters(props) {\r\n\tconst { id } = useParams()\r\n\tuseEffect(() => {\r\n\t\tprops.getCast(id)\r\n\t}, [props.getCast, id])\r\n\r\n\treturn (\r\n\t\t<div className='actor'>\r\n\t\t\t{props.casts && props.casts.length !== 0\r\n\t\t\t\t? props.casts.map((cast, index) => (\r\n\t\t\t\t\t\t<div className='actor-item' key={index}>\r\n\t\t\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t\t\t<img src={`${imgSrc}${cast.profile_path}`} alt={cast.original_name} /> <h4> {cast.original_name} </h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t  ))\r\n\t\t\t\t: ''}\r\n\t\t</div>\r\n\t)\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcasts: state.movie.cast,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetCast: (id) => dispatch(getCast(id)),\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Characters)\r\n",["99","100"],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\redux\\reducers\\index.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\redux\\reducers\\usersReducer.js",[],"D:\\Projects\\Glints\\fe-team-e-tama\\src\\redux\\reducers\\movieReducer.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":28,"column":18,"nodeType":"107","messageId":"108","endLine":28,"endColumn":24},{"ruleId":"105","severity":1,"message":"109","line":28,"column":26,"nodeType":"107","messageId":"108","endLine":28,"endColumn":34},{"ruleId":"105","severity":1,"message":"110","line":3,"column":65,"nodeType":"107","messageId":"108","endLine":3,"endColumn":75},{"ruleId":"111","severity":1,"message":"112","line":19,"column":5,"nodeType":"113","endLine":19,"endColumn":22,"suggestions":"114"},{"ruleId":"105","severity":1,"message":"115","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":14},{"ruleId":"111","severity":1,"message":"116","line":17,"column":5,"nodeType":"113","endLine":17,"endColumn":46,"suggestions":"117"},{"ruleId":"111","severity":1,"message":"112","line":21,"column":5,"nodeType":"113","endLine":21,"endColumn":36,"suggestions":"118"},{"ruleId":"111","severity":1,"message":"112","line":12,"column":5,"nodeType":"113","endLine":12,"endColumn":24,"suggestions":"119"},{"ruleId":"101","replacedBy":"120"},{"ruleId":"103","replacedBy":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'signIn' is assigned a value but never used.","Identifier","unusedVar","'jwtToken' is assigned a value but never used.","'getTrailer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["124"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["125"],["126"],["127"],["122"],["123"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [props, props.getMovies]",{"range":"136","text":"137"},"Update the dependencies array to be: [id, props, props.getMovieDetails, props.getTrailer]",{"range":"138","text":"139"},"Update the dependencies array to be: [props.getReviewsByMovieId, id, props]",{"range":"140","text":"141"},"Update the dependencies array to be: [props.getCast, id, props]",{"range":"142","text":"143"},[655,672],"[props, props.getMovies]",[667,708],"[id, props, props.getMovieDetails, props.getTrailer]",[769,800],"[props.getReviewsByMovieId, id, props]",[380,399],"[props.getCast, id, props]"]